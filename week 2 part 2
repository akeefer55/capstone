{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "<center>\n    <img src=\"https://gitlab.com/ibm/skills-network/courses/placeholder101/-/raw/master/labs/module%201/images/IDSNlogo.png\" width=\"300\" alt=\"cognitiveclass.ai logo\"  />\n</center>\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "# **SpaceX  Falcon 9 First Stage Landing Prediction**\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Assignment: Exploring and Preparing\u00a0Data\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Estimated time needed: **70** minutes\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "In this assignment, we will predict if the Falcon 9 first stage will land successfully. SpaceX advertises Falcon 9 rocket launches on its website with a cost of 62 million dollars; other providers cost upward of 165 million dollars each, much of the savings is due to the fact that SpaceX can reuse the first stage.\n\nIn this lab, you will perform Exploratory Data Analysis and Feature Engineering.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Falcon 9 first stage will land successfully\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0701EN-SkillsNetwork/api/Images/landing\\_1.gif)\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Several examples of an unsuccessful landing are shown here:\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0701EN-SkillsNetwork/api/Images/crash.gif)\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Most unsuccessful landings are planned. Space X performs a controlled landing in the oceans.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Objectives\n\nPerform exploratory Data Analysis and Feature Engineering using `Pandas` and `Matplotlib`\n\n*   Exploratory Data Analysis\n*   Preparing\u00a0Data  Feature Engineering\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "***\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Import Libraries and Define Auxiliary Functions\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We will import the following libraries the lab\n"
        },
        {
            "cell_type": "code",
            "execution_count": 18,
            "metadata": {},
            "outputs": [],
            "source": "# andas is a software library written for the Python programming language for data manipulation and analysis.\nimport pandas as pd\n#NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays\nimport numpy as np\n# Matplotlib is a plotting library for python and pyplot gives us a MatLab like plotting framework. We will use this in our plotter function to plot data.\nimport matplotlib.pyplot as plt\n#Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics\nimport seaborn as sns"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Exploratory Data Analysis\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "First, let's read the SpaceX dataset into a Pandas dataframe and print its summary\n"
        },
        {
            "cell_type": "code",
            "execution_count": 19,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FlightNumber</th>\n      <th>Date</th>\n      <th>BoosterVersion</th>\n      <th>PayloadMass</th>\n      <th>Orbit</th>\n      <th>LaunchSite</th>\n      <th>Outcome</th>\n      <th>Flights</th>\n      <th>GridFins</th>\n      <th>Reused</th>\n      <th>Legs</th>\n      <th>LandingPad</th>\n      <th>Block</th>\n      <th>ReusedCount</th>\n      <th>Serial</th>\n      <th>Longitude</th>\n      <th>Latitude</th>\n      <th>Class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2010-06-04</td>\n      <td>Falcon 9</td>\n      <td>6104.959412</td>\n      <td>LEO</td>\n      <td>CCAFS SLC 40</td>\n      <td>None None</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B0003</td>\n      <td>-80.577366</td>\n      <td>28.561857</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>2012-05-22</td>\n      <td>Falcon 9</td>\n      <td>525.000000</td>\n      <td>LEO</td>\n      <td>CCAFS SLC 40</td>\n      <td>None None</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B0005</td>\n      <td>-80.577366</td>\n      <td>28.561857</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>2013-03-01</td>\n      <td>Falcon 9</td>\n      <td>677.000000</td>\n      <td>ISS</td>\n      <td>CCAFS SLC 40</td>\n      <td>None None</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B0007</td>\n      <td>-80.577366</td>\n      <td>28.561857</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>2013-09-29</td>\n      <td>Falcon 9</td>\n      <td>500.000000</td>\n      <td>PO</td>\n      <td>VAFB SLC 4E</td>\n      <td>False Ocean</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B1003</td>\n      <td>-120.610829</td>\n      <td>34.632093</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>2013-12-03</td>\n      <td>Falcon 9</td>\n      <td>3170.000000</td>\n      <td>GTO</td>\n      <td>CCAFS SLC 40</td>\n      <td>None None</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B1004</td>\n      <td>-80.577366</td>\n      <td>28.561857</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   FlightNumber        Date BoosterVersion  PayloadMass Orbit    LaunchSite  \\\n0             1  2010-06-04       Falcon 9  6104.959412   LEO  CCAFS SLC 40   \n1             2  2012-05-22       Falcon 9   525.000000   LEO  CCAFS SLC 40   \n2             3  2013-03-01       Falcon 9   677.000000   ISS  CCAFS SLC 40   \n3             4  2013-09-29       Falcon 9   500.000000    PO   VAFB SLC 4E   \n4             5  2013-12-03       Falcon 9  3170.000000   GTO  CCAFS SLC 40   \n\n       Outcome  Flights  GridFins  Reused   Legs LandingPad  Block  \\\n0    None None        1     False   False  False        NaN    1.0   \n1    None None        1     False   False  False        NaN    1.0   \n2    None None        1     False   False  False        NaN    1.0   \n3  False Ocean        1     False   False  False        NaN    1.0   \n4    None None        1     False   False  False        NaN    1.0   \n\n   ReusedCount Serial   Longitude   Latitude  Class  \n0            0  B0003  -80.577366  28.561857      0  \n1            0  B0005  -80.577366  28.561857      0  \n2            0  B0007  -80.577366  28.561857      0  \n3            0  B1003 -120.610829  34.632093      0  \n4            0  B1004  -80.577366  28.561857      0  "
                    },
                    "execution_count": 19,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "df=pd.read_csv(\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/dataset_part_2.csv\")\n\n# If you were unable to complete the previous lab correctly you can uncomment and load this csv\n\n# df = pd.read_csv('https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0701EN-SkillsNetwork/api/dataset_part_2.csv')\n\ndf.head(5)"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "First, let's try to see how the `FlightNumber` (indicating the continuous launch attempts.) and `Payload` variables would affect the launch outcome.\n\nWe can plot out the <code>FlightNumber</code> vs. <code>PayloadMass</code>and overlay the outcome of the launch. We see that as the flight number increases, the first stage is more likely to land successfully. The payload mass is also important; it seems the more massive the payload, the less likely the first stage will return.\n"
        },
        {
            "cell_type": "code",
            "execution_count": 21,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 1842.38x360 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "sns.catplot(y=\"PayloadMass\", x=\"FlightNumber\", hue=\"Class\", data=df, aspect = 5)\nplt.xlabel(\"Flight Number\",fontsize=20)\nplt.ylabel(\"Pay load Mass (kg)\",fontsize=20)\nplt.show()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We see that different launch sites have different success rates.  <code>CCAFS LC-40</code>, has a success rate of 60 %, while  <code>KSC LC-39A</code> and <code>VAFB SLC 4E</code> has a success rate of 77%.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Next, let's drill down to each site visualize its detailed launch records.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK 1: Visualize the relationship between Flight Number and Launch Site\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Use the function <code>catplot</code> to plot <code>FlightNumber</code> vs <code>LaunchSite</code>, set the  parameter <code>x</code>  parameter to <code>FlightNumber</code>,set the  <code>y</code> to <code>Launch Site</code> and set the parameter <code>hue</code> to <code>'class'</code>\n"
        },
        {
            "cell_type": "code",
            "execution_count": 13,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 1842.38x360 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Plot a scatter point chart with x axis to be Flight Number and y axis to be the launch site, and hue to be the class value\nsns.catplot(y=\"LaunchSite\", x=\"FlightNumber\", hue=\"Class\", data=df, aspect = 5)\nplt.xlabel(\"Flight Number\",fontsize=20)\nplt.ylabel(\"Launch Site\",fontsize=20)\nplt.show()\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Now try to explain the patterns you found in the Flight Number vs. Launch Site scatter point plots.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK 2: Visualize the relationship between Payload and Launch Site\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We also want to observe if there is any relationship between launch sites and their payload mass.\n"
        },
        {
            "cell_type": "code",
            "execution_count": 14,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "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\n",
                        "text/plain": "<Figure size 402.375x360 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Plot a scatter point chart with x axis to be Pay Load Mass (kg) and y axis to be the launch site, and hue to be the class value\nsns.catplot(y=\"LaunchSite\", x=\"PayloadMass\", hue=\"Class\", data=df)\nplt.xlabel(\"Pay Load Mass (kg)\",fontsize=20)\nplt.ylabel(\"Launch Site\",fontsize=20)\nplt.show()\n\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Now try to explain any patterns you found in the Payload Vs. Launch Site scatter point chart.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "CCAFS SLC 40 can launch rockets with payload mass from low kg to very high kg. VAFB SLC 4E is preferred for middle payload mass."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK  3: Visualize the relationship between success rate of each orbit type\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Next, we want to visually check if there are any relationship between success rate and orbit type.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Let's create a `bar chart` for the sucess rate of each orbit\n"
        },
        {
            "cell_type": "code",
            "execution_count": 15,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# HINT use groupby method on Orbit column and get the mean of Class column\nt = df.groupby(['Orbit', 'Class'])['Class'].agg(['mean']).reset_index()\nsns.barplot(y=\"Class\", x=\"Orbit\", data=t)\n\nplt.xlabel(\"Orbit\",fontsize=15)\nplt.ylabel(\"Class\",fontsize=15)\nplt.show()\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Analyze the ploted bar chart try to find which orbits have high sucess rate.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK  4: Visualize the relationship between FlightNumber and Orbit type\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "For each orbit, we want to see if there is any relationship between FlightNumber and Orbit type.\n"
        },
        {
            "cell_type": "code",
            "execution_count": 16,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 402.375x360 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Plot a scatter point chart with x axis to be FlightNumber and y axis to be the Orbit, and hue to be the class value\nsns.catplot(y=\"Orbit\", x=\"FlightNumber\", hue=\"Class\", data=df)\nplt.xlabel(\"FlightNumber\",fontsize=20)\nplt.ylabel(\"Orbit\",fontsize=20)\nplt.show()\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "You should see that in the LEO orbit the Success appears related to the number of flights; on the other hand, there seems to be no relationship between flight number when in GTO orbit.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK  5: Visualize the relationship between Payload and Orbit type\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Similarly, we can plot the Payload vs. Orbit scatter point charts to reveal the relationship between Payload and Orbit type\n"
        },
        {
            "cell_type": "code",
            "execution_count": 17,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 402.375x360 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Plot a scatter point chart with x axis to be Payload and y axis to be the Orbit, and hue to be the class value\nsns.catplot(y=\"Orbit\", x=\"PayloadMass\", hue=\"Class\", data=df)\nplt.xlabel(\"Payload\",fontsize=20)\nplt.ylabel(\"Orbit\",fontsize=20)\nplt.show()\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "You should observe that Heavy payloads have a negative influence on GTO orbits and positive on GTO and Polar LEO (ISS) orbits.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK  6: Visualize the launch success yearly trend\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "You can plot a line chart with x axis to be <code>Year</code> and y axis to be average success rate, to get the average launch success trend.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "The function will help you get the year from the date:\n"
        },
        {
            "cell_type": "code",
            "execution_count": 22,
            "metadata": {},
            "outputs": [],
            "source": "# A function to Extract years from the date \ndef Extract_year():\n    for i in df[\"Date\"]:\n        year.append(i.split(\"-\")[0])\n    return year"
        },
        {
            "cell_type": "code",
            "execution_count": 26,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Plot a line chart with x axis to be the extracted year and y axis to be the success rate\nyear=[]\ndf1 = df.copy()\nyear = Extract_year()\ndf1[\"Date\"] = year\ndf1.head()\n\nsns.lineplot(data=df1, x=\"Date\", y=\"Class\")\nplt.xlabel(\"Date\",fontsize=20)\nplt.ylabel(\"Success Rate\",fontsize=20)\nplt.show()\n\n\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "you can observe that the sucess rate since 2013 kept increasing till 2020\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Features Engineering\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "By now, you should obtain some preliminary insights about how each important variable would affect the success rate, we will select the features that will be used in success prediction in the future module.\n"
        },
        {
            "cell_type": "code",
            "execution_count": 25,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FlightNumber</th>\n      <th>PayloadMass</th>\n      <th>Orbit</th>\n      <th>LaunchSite</th>\n      <th>Flights</th>\n      <th>GridFins</th>\n      <th>Reused</th>\n      <th>Legs</th>\n      <th>LandingPad</th>\n      <th>Block</th>\n      <th>ReusedCount</th>\n      <th>Serial</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>6104.959412</td>\n      <td>LEO</td>\n      <td>CCAFS SLC 40</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B0003</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>525.000000</td>\n      <td>LEO</td>\n      <td>CCAFS SLC 40</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B0005</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>677.000000</td>\n      <td>ISS</td>\n      <td>CCAFS SLC 40</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B0007</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>500.000000</td>\n      <td>PO</td>\n      <td>VAFB SLC 4E</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B1003</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>3170.000000</td>\n      <td>GTO</td>\n      <td>CCAFS SLC 40</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>B1004</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   FlightNumber  PayloadMass Orbit    LaunchSite  Flights  GridFins  Reused  \\\n0             1  6104.959412   LEO  CCAFS SLC 40        1     False   False   \n1             2   525.000000   LEO  CCAFS SLC 40        1     False   False   \n2             3   677.000000   ISS  CCAFS SLC 40        1     False   False   \n3             4   500.000000    PO   VAFB SLC 4E        1     False   False   \n4             5  3170.000000   GTO  CCAFS SLC 40        1     False   False   \n\n    Legs LandingPad  Block  ReusedCount Serial  \n0  False        NaN    1.0            0  B0003  \n1  False        NaN    1.0            0  B0005  \n2  False        NaN    1.0            0  B0007  \n3  False        NaN    1.0            0  B1003  \n4  False        NaN    1.0            0  B1004  "
                    },
                    "execution_count": 25,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "features = df[['FlightNumber', 'PayloadMass', 'Orbit', 'LaunchSite', 'Flights', 'GridFins', 'Reused', 'Legs', 'LandingPad', 'Block', 'ReusedCount', 'Serial']]\nfeatures.head()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK  7: Create dummy variables to categorical columns\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Use the function <code>get_dummies</code> and <code>features</code> dataframe to apply OneHotEncoder to the column <code>Orbits</code>, <code>LaunchSite</code>, <code>LandingPad</code>, and <code>Serial</code>. Assign the value to the variable <code>features_one_hot</code>, display the results using the method head. Your result dataframe must include all features including the encoded ones.\n"
        },
        {
            "cell_type": "code",
            "execution_count": 27,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FlightNumber</th>\n      <th>PayloadMass</th>\n      <th>Flights</th>\n      <th>GridFins</th>\n      <th>Reused</th>\n      <th>Legs</th>\n      <th>Block</th>\n      <th>ReusedCount</th>\n      <th>Orbit_ES-L1</th>\n      <th>Orbit_GEO</th>\n      <th>...</th>\n      <th>Serial_B1048</th>\n      <th>Serial_B1049</th>\n      <th>Serial_B1050</th>\n      <th>Serial_B1051</th>\n      <th>Serial_B1054</th>\n      <th>Serial_B1056</th>\n      <th>Serial_B1058</th>\n      <th>Serial_B1059</th>\n      <th>Serial_B1060</th>\n      <th>Serial_B1062</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>6104.959412</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>525.000000</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>677.000000</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>500.000000</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>3170.000000</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 80 columns</p>\n</div>",
                        "text/plain": "   FlightNumber  PayloadMass  Flights  GridFins  Reused   Legs  Block  \\\n0             1  6104.959412        1     False   False  False    1.0   \n1             2   525.000000        1     False   False  False    1.0   \n2             3   677.000000        1     False   False  False    1.0   \n3             4   500.000000        1     False   False  False    1.0   \n4             5  3170.000000        1     False   False  False    1.0   \n\n   ReusedCount  Orbit_ES-L1  Orbit_GEO  ...  Serial_B1048  Serial_B1049  \\\n0            0            0          0  ...             0             0   \n1            0            0          0  ...             0             0   \n2            0            0          0  ...             0             0   \n3            0            0          0  ...             0             0   \n4            0            0          0  ...             0             0   \n\n   Serial_B1050  Serial_B1051  Serial_B1054  Serial_B1056  Serial_B1058  \\\n0             0             0             0             0             0   \n1             0             0             0             0             0   \n2             0             0             0             0             0   \n3             0             0             0             0             0   \n4             0             0             0             0             0   \n\n   Serial_B1059  Serial_B1060  Serial_B1062  \n0             0             0             0  \n1             0             0             0  \n2             0             0             0  \n3             0             0             0  \n4             0             0             0  \n\n[5 rows x 80 columns]"
                    },
                    "execution_count": 27,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# HINT: Use get_dummies() function on the categorical columns\nfeatures_one_hot = pd.get_dummies(features, columns=['Orbit', 'LaunchSite', 'LandingPad', 'Serial'])\nfeatures_one_hot.head()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### TASK  8: Cast all numeric columns to `float64`\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Now that our <code>features_one_hot</code> dataframe only contains numbers cast the entire dataframe to variable type <code>float64</code>\n"
        },
        {
            "cell_type": "code",
            "execution_count": 28,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FlightNumber</th>\n      <th>PayloadMass</th>\n      <th>Flights</th>\n      <th>GridFins</th>\n      <th>Reused</th>\n      <th>Legs</th>\n      <th>Block</th>\n      <th>ReusedCount</th>\n      <th>Orbit_ES-L1</th>\n      <th>Orbit_GEO</th>\n      <th>...</th>\n      <th>Serial_B1048</th>\n      <th>Serial_B1049</th>\n      <th>Serial_B1050</th>\n      <th>Serial_B1051</th>\n      <th>Serial_B1054</th>\n      <th>Serial_B1056</th>\n      <th>Serial_B1058</th>\n      <th>Serial_B1059</th>\n      <th>Serial_B1060</th>\n      <th>Serial_B1062</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>6104.959412</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2.0</td>\n      <td>525.000000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.0</td>\n      <td>677.000000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.0</td>\n      <td>500.000000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3170.000000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>85</th>\n      <td>86.0</td>\n      <td>15400.000000</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>86</th>\n      <td>87.0</td>\n      <td>15400.000000</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>87</th>\n      <td>88.0</td>\n      <td>15400.000000</td>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>88</th>\n      <td>89.0</td>\n      <td>15400.000000</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>89</th>\n      <td>90.0</td>\n      <td>3681.000000</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>90 rows \u00d7 80 columns</p>\n</div>",
                        "text/plain": "    FlightNumber   PayloadMass  Flights  GridFins  Reused  Legs  Block  \\\n0            1.0   6104.959412      1.0       0.0     0.0   0.0    1.0   \n1            2.0    525.000000      1.0       0.0     0.0   0.0    1.0   \n2            3.0    677.000000      1.0       0.0     0.0   0.0    1.0   \n3            4.0    500.000000      1.0       0.0     0.0   0.0    1.0   \n4            5.0   3170.000000      1.0       0.0     0.0   0.0    1.0   \n..           ...           ...      ...       ...     ...   ...    ...   \n85          86.0  15400.000000      2.0       1.0     1.0   1.0    5.0   \n86          87.0  15400.000000      3.0       1.0     1.0   1.0    5.0   \n87          88.0  15400.000000      6.0       1.0     1.0   1.0    5.0   \n88          89.0  15400.000000      3.0       1.0     1.0   1.0    5.0   \n89          90.0   3681.000000      1.0       1.0     0.0   1.0    5.0   \n\n    ReusedCount  Orbit_ES-L1  Orbit_GEO  ...  Serial_B1048  Serial_B1049  \\\n0           0.0          0.0        0.0  ...           0.0           0.0   \n1           0.0          0.0        0.0  ...           0.0           0.0   \n2           0.0          0.0        0.0  ...           0.0           0.0   \n3           0.0          0.0        0.0  ...           0.0           0.0   \n4           0.0          0.0        0.0  ...           0.0           0.0   \n..          ...          ...        ...  ...           ...           ...   \n85          2.0          0.0        0.0  ...           0.0           0.0   \n86          2.0          0.0        0.0  ...           0.0           0.0   \n87          5.0          0.0        0.0  ...           0.0           0.0   \n88          2.0          0.0        0.0  ...           0.0           0.0   \n89          0.0          0.0        0.0  ...           0.0           0.0   \n\n    Serial_B1050  Serial_B1051  Serial_B1054  Serial_B1056  Serial_B1058  \\\n0            0.0           0.0           0.0           0.0           0.0   \n1            0.0           0.0           0.0           0.0           0.0   \n2            0.0           0.0           0.0           0.0           0.0   \n3            0.0           0.0           0.0           0.0           0.0   \n4            0.0           0.0           0.0           0.0           0.0   \n..           ...           ...           ...           ...           ...   \n85           0.0           0.0           0.0           0.0           0.0   \n86           0.0           0.0           0.0           0.0           1.0   \n87           0.0           1.0           0.0           0.0           0.0   \n88           0.0           0.0           0.0           0.0           0.0   \n89           0.0           0.0           0.0           0.0           0.0   \n\n    Serial_B1059  Serial_B1060  Serial_B1062  \n0            0.0           0.0           0.0  \n1            0.0           0.0           0.0  \n2            0.0           0.0           0.0  \n3            0.0           0.0           0.0  \n4            0.0           0.0           0.0  \n..           ...           ...           ...  \n85           0.0           1.0           0.0  \n86           0.0           0.0           0.0  \n87           0.0           0.0           0.0  \n88           0.0           1.0           0.0  \n89           0.0           0.0           1.0  \n\n[90 rows x 80 columns]"
                    },
                    "execution_count": 28,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# HINT: use astype function\nfeatures_one_hot.astype(float)\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We can now export it to a <b>CSV</b> for the next section,but to make the answers consistent, in the next lab we will provide data in a pre-selected date range.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "<code>features_one_hot.to_csv('dataset_part\\_3.csv', index=False)</code>\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Authors\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "<a href=\"https://www.linkedin.com/in/joseph-s-50398b136/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDS0321ENSkillsNetwork26802033-2021-01-01\">Joseph Santarcangelo</a> has a PhD in Electrical Engineering, his research focused on using machine learning, signal processing, and computer vision to determine how videos impact human cognition. Joseph has been working for IBM since he completed his PhD.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "<a href=\"https://www.linkedin.com/in/nayefaboutayoun/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDS0321ENSkillsNetwork26802033-2021-01-01\">Nayef Abou Tayoun</a> is a Data Scientist at IBM and pursuing a Master of Management in Artificial intelligence degree at Queen's University.\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Change Log\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "| Date (YYYY-MM-DD) | Version | Changed By | Change Description      |\n| ----------------- | ------- | ---------- | ----------------------- |\n| 2020-09-20        | 1.0     | Joseph     | Modified Multiple Areas |\n| 2020-11-10        | 1.1     | Nayef      | updating the input data |\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Copyright \u00a9 2020 IBM Corporation. All rights reserved.\n"
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3.8",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.8.11"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 4
}
